"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    DEBUG=(bool, False),
    SSO_URL=(str, "https://sso.codata.pb.gov.br/auth"),
    SSO_REALM=(str, "paraiba"),
    SSO_NAME=(str, "Para√≠ba"),
    SSO_CLIENT_ID=(str, "exemplo"),
    SSO_CLIENT_SECRET=str,
)

environ.Env.read_env(BASE_DIR / ".env")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG")

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = (
    env("SECRET_KEY") if not DEBUG else env("SECRET_KEY", default="django-secret-key")
)

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=["*"])

# Application definition

INSTALLED_APPS = [
    "jazzmin",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Mozilla Django OIDC https://mozilla-django-oidc.readthedocs.io/en/stable/
    "mozilla_django_oidc",
    # Debug Toolbar https://django-debug-toolbar.readthedocs.io/
    "debug_toolbar",
    # Django Admin Extra buttons https://saxix.github.io/django-admin-extra-buttons/
    "admin_extra_buttons",
    # Django Import Export https://django-import-export.readthedocs.io/
    "import_export",
    # Django Reversion https://django-reversion.readthedocs.io/
    "reversion",
    # Project apps
    "apps.auth",
    "apps.example",
]

AUTH_USER_MODEL = "app_auth.User"

AUTHENTICATION_BACKENDS = [
    "config.auth.SSOAuthenticationBackend",
    "django.contrib.auth.backends.ModelBackend",
]

MIDDLEWARE = [
    "django.middleware.cache.UpdateCacheMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "mozilla_django_oidc.middleware.SessionRefresh",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.cache.FetchFromCacheMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {"default": env.db_url()}

CACHES = {
    "default": env.cache_url(default="locmemcache://" if not DEBUG else "dummycache://")
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "pt-br"

TIME_ZONE = "America/Recife"

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

STATICFILES_DIRS = [BASE_DIR / "static"]

STATIC_ROOT = BASE_DIR / "staticfiles"

STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

INTERNAL_IPS = [
    "127.0.0.1",
]

# Logging
LOGGING = {
    "version": 1,
    "disable_existing_loggers": True,
    "formatters": {
        "default": {
            "format": "{asctime} {levelname:<8} {name} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "console": {
            "level": env("LOG_LEVEL", default="INFO" if DEBUG else "WARNING"),
            "formatter": "default",
            "class": "logging.StreamHandler",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "WARNING",
    },
    "loggers": {
        "apps": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": False,
        },
        "django": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": False,
        },
    },
}

LOGIN_REDIRECT_URL = "admin:login"
LOGOUT_REDIRECT_URL = "admin:login"

# Mozilla Django OIDC
SSO_URL = env("SSO_URL")
SSO_REALM = env("SSO_REALM")
SSO_CLIENT_ID = env("SSO_CLIENT_ID")
SSO_CLIENT_SECRET = env("SSO_CLIENT_SECRET")
SSO_OIDC_URL = f"{SSO_URL}/realms/{SSO_REALM}/protocol/openid-connect"

OIDC_RP_SIGN_ALGO = "RS256"
OIDC_OP_JWKS_ENDPOINT = f"{SSO_OIDC_URL}/certs"
OIDC_OP_AUTHORIZATION_ENDPOINT = f"{SSO_OIDC_URL}/auth"
OIDC_OP_TOKEN_ENDPOINT = f"{SSO_OIDC_URL}/token"
OIDC_OP_USER_ENDPOINT = f"{SSO_OIDC_URL}/userinfo"

OIDC_RP_CLIENT_ID = SSO_CLIENT_ID
OIDC_RP_CLIENT_SECRET = SSO_CLIENT_SECRET

OIDC_STORE_ACCESS_TOKEN = True
OIDC_STORE_ID_TOKEN = True

OIDC_OP_LOGOUT_URL_METHOD = "config.auth.logout_url"

# Django Jazzmin
JAZZMIN_SETTINGS = {
    "site_title": "Exemplo",
    "site_header": "Exemplo",
    "site_brand": "Exemplo",
    "site_logo": "codata-logo.svg",
    "login_logo": "codata.svg",
    "login_logo_dark": "codata-white.svg",
    "welcome_sign": "Exemplo",
}
